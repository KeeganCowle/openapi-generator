# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from pydantic import BaseModel, ConfigDict, StrictStr, field_validator


class Feeding(BaseModel):
    """
    Feeding
    """ # noqa: E501
    task_name: StrictStr
    function_name: StrictStr
    content: StrictStr

    @field_validator('task_name')
    def task_name_validate_enum(cls, value):
        """Validates the enum"""
        if value not in set(['cleaning']):
            raise ValueError("must be one of enum values ('cleaning')")
        return value

    @field_validator('function_name')
    def function_name_validate_enum(cls, value):
        """Validates the enum"""
        if value not in set(['care_nourish']):
            raise ValueError("must be one of enum values ('care_nourish')")
        return value

    model_config = ConfigDict(
        validate_assignment=True,
        extra='forbid',
    )

    # Deprecated. Use model_inst.model_dump_json(by_alias=True, exclude_unset=True) instead
    # def to_json(self) -> str:

    # Deprecated. Use Feeding.model_validate_json(json_str)
    # @classmethod
    # def from_json(cls, json_str: str):

    # Deprecated. Use Feeding.model_validate(obj)
    # @classmethod
    # def from_dict(cls, obj: Dict[str, Any]):



